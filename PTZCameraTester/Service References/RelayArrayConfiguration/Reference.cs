//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PTZCameraTester.RelayArrayConfiguration {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", ConfigurationName="RelayArrayConfiguration.RelayArrayConfigurationPortType")]
    public interface RelayArrayConfigurationPortType {
        
        // CODEGEN: Parameter 'size' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-pelco-com:service:RelayArrayConfiguration:1#GetArraySize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="size")]
        PTZCameraTester.RelayArrayConfiguration.GetArraySizeResponse GetArraySize(PTZCameraTester.RelayArrayConfiguration.GetArraySizeRequest request);
        
        // CODEGEN: Parameter 'relayConfig' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-pelco-com:service:RelayArrayConfiguration:1#GetConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="relayConfig")]
        PTZCameraTester.RelayArrayConfiguration.GetConfigurationResponse GetConfiguration(PTZCameraTester.RelayArrayConfiguration.GetConfigurationRequest request);
        
        // CODEGEN: Parameter 'relayStates' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-pelco-com:service:RelayArrayConfiguration:1#GetRelayStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="relayStates")]
        PTZCameraTester.RelayArrayConfiguration.GetRelayStatesResponse GetRelayStates(PTZCameraTester.RelayArrayConfiguration.GetRelayStatesRequest request);
        
        // CODEGEN: Parameter 'relayID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-pelco-com:service:RelayArrayConfiguration:1#ResetConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PTZCameraTester.RelayArrayConfiguration.ResetConfigurationResponse ResetConfiguration(PTZCameraTester.RelayArrayConfiguration.ResetConfigurationRequest request);
        
        // CODEGEN: Parameter 'relayID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-pelco-com:service:RelayArrayConfiguration:1#SetConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PTZCameraTester.RelayArrayConfiguration.SetConfigurationResponse SetConfiguration(PTZCameraTester.RelayArrayConfiguration.SetConfigurationRequest request);
        
        // CODEGEN: Parameter 'relayID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-pelco-com:service:RelayArrayConfiguration:1#TriggerRelay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PTZCameraTester.RelayArrayConfiguration.TriggerRelayResponse TriggerRelay(PTZCameraTester.RelayArrayConfiguration.TriggerRelayRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetArraySize", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class GetArraySizeRequest {
        
        public GetArraySizeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetArraySizeResponse", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class GetArraySizeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int size;
        
        public GetArraySizeResponse() {
        }
        
        public GetArraySizeResponse(int size) {
            this.size = size;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1")]
    public partial class RelayConfig : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int polarityField;
        
        private bool polarityFieldSpecified;
        
        private int enabledField;
        
        private bool enabledFieldSpecified;
        
        private int modeField;
        
        private int periodField;
        
        private int dutyCycleField;
        
        private int pulsesField;
        
        private int physicalOutputField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int polarity {
            get {
                return this.polarityField;
            }
            set {
                this.polarityField = value;
                this.RaisePropertyChanged("polarity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool polaritySpecified {
            get {
                return this.polarityFieldSpecified;
            }
            set {
                this.polarityFieldSpecified = value;
                this.RaisePropertyChanged("polaritySpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
                this.RaisePropertyChanged("enabledSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public int period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
                this.RaisePropertyChanged("period");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public int dutyCycle {
            get {
                return this.dutyCycleField;
            }
            set {
                this.dutyCycleField = value;
                this.RaisePropertyChanged("dutyCycle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public int pulses {
            get {
                return this.pulsesField;
            }
            set {
                this.pulsesField = value;
                this.RaisePropertyChanged("pulses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public int physicalOutput {
            get {
                return this.physicalOutputField;
            }
            set {
                this.physicalOutputField = value;
                this.RaisePropertyChanged("physicalOutput");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1")]
    public partial class RelayStates : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string offsetField;
        
        private int lengthField;
        
        private string changedField;
        
        private string state1Field;
        
        private string state2Field;
        
        private string enabledField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
                this.RaisePropertyChanged("offset");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
                this.RaisePropertyChanged("length");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string changed {
            get {
                return this.changedField;
            }
            set {
                this.changedField = value;
                this.RaisePropertyChanged("changed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string state1 {
            get {
                return this.state1Field;
            }
            set {
                this.state1Field = value;
                this.RaisePropertyChanged("state1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string state2 {
            get {
                return this.state2Field;
            }
            set {
                this.state2Field = value;
                this.RaisePropertyChanged("state2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("enabled");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfiguration", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class GetConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int relayID;
        
        public GetConfigurationRequest() {
        }
        
        public GetConfigurationRequest(int relayID) {
            this.relayID = relayID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfigurationResponse", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class GetConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PTZCameraTester.RelayArrayConfiguration.RelayConfig relayConfig;
        
        public GetConfigurationResponse() {
        }
        
        public GetConfigurationResponse(PTZCameraTester.RelayArrayConfiguration.RelayConfig relayConfig) {
            this.relayConfig = relayConfig;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRelayStates", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class GetRelayStatesRequest {
        
        public GetRelayStatesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRelayStatesResponse", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class GetRelayStatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PTZCameraTester.RelayArrayConfiguration.RelayStates relayStates;
        
        public GetRelayStatesResponse() {
        }
        
        public GetRelayStatesResponse(PTZCameraTester.RelayArrayConfiguration.RelayStates relayStates) {
            this.relayStates = relayStates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetConfiguration", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class ResetConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int relayID;
        
        public ResetConfigurationRequest() {
        }
        
        public ResetConfigurationRequest(int relayID) {
            this.relayID = relayID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetConfigurationResponse", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class ResetConfigurationResponse {
        
        public ResetConfigurationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetConfiguration", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class SetConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int relayID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PTZCameraTester.RelayArrayConfiguration.RelayConfig relayConfig;
        
        public SetConfigurationRequest() {
        }
        
        public SetConfigurationRequest(int relayID, PTZCameraTester.RelayArrayConfiguration.RelayConfig relayConfig) {
            this.relayID = relayID;
            this.relayConfig = relayConfig;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetConfigurationResponse", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class SetConfigurationResponse {
        
        public SetConfigurationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TriggerRelay", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class TriggerRelayRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int relayID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PTZCameraTester.RelayArrayConfiguration.RelayConfig relayConfig;
        
        public TriggerRelayRequest() {
        }
        
        public TriggerRelayRequest(int relayID, int mode, PTZCameraTester.RelayArrayConfiguration.RelayConfig relayConfig) {
            this.relayID = relayID;
            this.mode = mode;
            this.relayConfig = relayConfig;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TriggerRelayResponse", WrapperNamespace="urn:schemas-pelco-com:service:RelayArrayConfiguration:1", IsWrapped=true)]
    public partial class TriggerRelayResponse {
        
        public TriggerRelayResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RelayArrayConfigurationPortTypeChannel : PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelayArrayConfigurationPortTypeClient : System.ServiceModel.ClientBase<PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType>, PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType {
        
        public RelayArrayConfigurationPortTypeClient() {
        }
        
        public RelayArrayConfigurationPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RelayArrayConfigurationPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelayArrayConfigurationPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelayArrayConfigurationPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PTZCameraTester.RelayArrayConfiguration.GetArraySizeResponse PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType.GetArraySize(PTZCameraTester.RelayArrayConfiguration.GetArraySizeRequest request) {
            return base.Channel.GetArraySize(request);
        }
        
        public int GetArraySize() {
            PTZCameraTester.RelayArrayConfiguration.GetArraySizeRequest inValue = new PTZCameraTester.RelayArrayConfiguration.GetArraySizeRequest();
            PTZCameraTester.RelayArrayConfiguration.GetArraySizeResponse retVal = ((PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType)(this)).GetArraySize(inValue);
            return retVal.size;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PTZCameraTester.RelayArrayConfiguration.GetConfigurationResponse PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType.GetConfiguration(PTZCameraTester.RelayArrayConfiguration.GetConfigurationRequest request) {
            return base.Channel.GetConfiguration(request);
        }
        
        public PTZCameraTester.RelayArrayConfiguration.RelayConfig GetConfiguration(int relayID) {
            PTZCameraTester.RelayArrayConfiguration.GetConfigurationRequest inValue = new PTZCameraTester.RelayArrayConfiguration.GetConfigurationRequest();
            inValue.relayID = relayID;
            PTZCameraTester.RelayArrayConfiguration.GetConfigurationResponse retVal = ((PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType)(this)).GetConfiguration(inValue);
            return retVal.relayConfig;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PTZCameraTester.RelayArrayConfiguration.GetRelayStatesResponse PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType.GetRelayStates(PTZCameraTester.RelayArrayConfiguration.GetRelayStatesRequest request) {
            return base.Channel.GetRelayStates(request);
        }
        
        public PTZCameraTester.RelayArrayConfiguration.RelayStates GetRelayStates() {
            PTZCameraTester.RelayArrayConfiguration.GetRelayStatesRequest inValue = new PTZCameraTester.RelayArrayConfiguration.GetRelayStatesRequest();
            PTZCameraTester.RelayArrayConfiguration.GetRelayStatesResponse retVal = ((PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType)(this)).GetRelayStates(inValue);
            return retVal.relayStates;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PTZCameraTester.RelayArrayConfiguration.ResetConfigurationResponse PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType.ResetConfiguration(PTZCameraTester.RelayArrayConfiguration.ResetConfigurationRequest request) {
            return base.Channel.ResetConfiguration(request);
        }
        
        public void ResetConfiguration(int relayID) {
            PTZCameraTester.RelayArrayConfiguration.ResetConfigurationRequest inValue = new PTZCameraTester.RelayArrayConfiguration.ResetConfigurationRequest();
            inValue.relayID = relayID;
            PTZCameraTester.RelayArrayConfiguration.ResetConfigurationResponse retVal = ((PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType)(this)).ResetConfiguration(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PTZCameraTester.RelayArrayConfiguration.SetConfigurationResponse PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType.SetConfiguration(PTZCameraTester.RelayArrayConfiguration.SetConfigurationRequest request) {
            return base.Channel.SetConfiguration(request);
        }
        
        public void SetConfiguration(int relayID, PTZCameraTester.RelayArrayConfiguration.RelayConfig relayConfig) {
            PTZCameraTester.RelayArrayConfiguration.SetConfigurationRequest inValue = new PTZCameraTester.RelayArrayConfiguration.SetConfigurationRequest();
            inValue.relayID = relayID;
            inValue.relayConfig = relayConfig;
            PTZCameraTester.RelayArrayConfiguration.SetConfigurationResponse retVal = ((PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType)(this)).SetConfiguration(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PTZCameraTester.RelayArrayConfiguration.TriggerRelayResponse PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType.TriggerRelay(PTZCameraTester.RelayArrayConfiguration.TriggerRelayRequest request) {
            return base.Channel.TriggerRelay(request);
        }
        
        public void TriggerRelay(int relayID, int mode, PTZCameraTester.RelayArrayConfiguration.RelayConfig relayConfig) {
            PTZCameraTester.RelayArrayConfiguration.TriggerRelayRequest inValue = new PTZCameraTester.RelayArrayConfiguration.TriggerRelayRequest();
            inValue.relayID = relayID;
            inValue.mode = mode;
            inValue.relayConfig = relayConfig;
            PTZCameraTester.RelayArrayConfiguration.TriggerRelayResponse retVal = ((PTZCameraTester.RelayArrayConfiguration.RelayArrayConfigurationPortType)(this)).TriggerRelay(inValue);
        }
    }
}
